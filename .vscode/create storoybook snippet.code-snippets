{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.

	"Create storie for component": {
		"scope": "typescript, typescriptreact",
		"prefix": "csc",
		"body": [
			
"import { ComponentStory, ComponentMeta } from '@storybook/react';",
"",
"import { ThemeDecorator } from 'shared/config/storybook/ThemeDecorator/ThemeDecorator'",
"import { Theme } from 'app/providers/ThemeProvider'",
"import ${TM_FILENAME/^.*(?=(\\.stories))//gi}  from './${TM_FILENAME_BASE}';",
"",
"export default {",
	"\ttitle: '${1:pages}/${TM_FILENAME_BASE},",
	"\tcomponent: ${TM_FILENAME_BASE},",
	"\targTypes: {",
		"\t\tbackgroundColor: { control: 'color' },",
	"\t},",
"} as ComponentMeta<typeof ${TM_FILENAME_BASE}>;",
"",
"const Template: ComponentStory<typeof ${TM_FILENAME_BASE}> = (args) => <${TM_FILENAME_BASE} {...args as object} />;",
"",
"export const Primary = Template.bind({});",
"Primary.args = {};",
"",
"export const Dark = Template.bind({});",
"Dark.args = {};",
"Dark.decorators = [ThemeDecorator(Theme.DARK)]",

		],
		"description": "Create react component"
	}
}